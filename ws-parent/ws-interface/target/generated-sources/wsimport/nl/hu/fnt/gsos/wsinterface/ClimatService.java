
package nl.hu.fnt.gsos.wsinterface;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.Service;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceException;
import javax.xml.ws.WebServiceFeature;


/**
 * This class was generated by the JAX-WS RI.
 * JAX-WS RI 2.2.8
 * Generated source version: 2.2
 * 
 */
@WebServiceClient(name = "ClimatService", targetNamespace = "/ClimatService", wsdlLocation = "file:/C:/Users/Carl/workspace/praktijkopdracht-1/ws-parent/ws-interface/src/main/webapp/wsdl/ClimatService.wsdl")
public class ClimatService
    extends Service
{

    private final static URL CLIMATSERVICE_WSDL_LOCATION;
    private final static WebServiceException CLIMATSERVICE_EXCEPTION;
    private final static QName CLIMATSERVICE_QNAME = new QName("/ClimatService", "ClimatService");

    static {
        URL url = null;
        WebServiceException e = null;
        try {
            url = new URL("file:/C:/Users/Carl/workspace/praktijkopdracht-1/ws-parent/ws-interface/src/main/webapp/wsdl/ClimatService.wsdl");
        } catch (MalformedURLException ex) {
            e = new WebServiceException(ex);
        }
        CLIMATSERVICE_WSDL_LOCATION = url;
        CLIMATSERVICE_EXCEPTION = e;
    }

    public ClimatService() {
        super(__getWsdlLocation(), CLIMATSERVICE_QNAME);
    }

    public ClimatService(WebServiceFeature... features) {
        super(__getWsdlLocation(), CLIMATSERVICE_QNAME, features);
    }

    public ClimatService(URL wsdlLocation) {
        super(wsdlLocation, CLIMATSERVICE_QNAME);
    }

    public ClimatService(URL wsdlLocation, WebServiceFeature... features) {
        super(wsdlLocation, CLIMATSERVICE_QNAME, features);
    }

    public ClimatService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ClimatService(URL wsdlLocation, QName serviceName, WebServiceFeature... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     * 
     * @return
     *     returns ClimatServiceInterface
     */
    @WebEndpoint(name = "ClimatServicePort")
    public ClimatServiceInterface getClimatServicePort() {
        return super.getPort(new QName("/ClimatService", "ClimatServicePort"), ClimatServiceInterface.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ClimatServiceInterface
     */
    @WebEndpoint(name = "ClimatServicePort")
    public ClimatServiceInterface getClimatServicePort(WebServiceFeature... features) {
        return super.getPort(new QName("/ClimatService", "ClimatServicePort"), ClimatServiceInterface.class, features);
    }

    private static URL __getWsdlLocation() {
        if (CLIMATSERVICE_EXCEPTION!= null) {
            throw CLIMATSERVICE_EXCEPTION;
        }
        return CLIMATSERVICE_WSDL_LOCATION;
    }

}
